INNER JOIN, LEFT JOIN, RIGHT JOIN, FULL JOIN, CROSS JOIN, UNION
	- necessidade de busca por resultados em outras tabelas
	- campo em comum -----> mesmo tipo, mas com diferentes tamanhos
	- seleção dos campos com referências à outra tabela:
				CLIENTE.CIDADE
				CLENTE.ESTADO
				MOVIMENTO.DATA
				MOVIMENTO.VALOR_VENDA 
				FROM CLIENTE INNER JOIN MOVIMENTO ON
				CLIENTE.CLIENTE = MOVIMENTO.CLIENTE
		Ø SELECT NOTAS_FISCAIS.MATRICULA, TABELA_DE_VENDEDORES.NOME, COUNT(*) AS NUMERO_NOTAS -- campo matricula presente em 2 tabelas
	FROM NOTAS_FISCAIS
	INNER JOIN TABELA_DE_VENDEDORES
	ON NOTAS_FISCAIS.MATRICULA = TABELA_DE_VENDEDORES.MATRICULA 
	GROUP BY NOTAS_FISCAIS.MATRICULA, TABELA_DE_VENDEDORES.NOME

	> EXERCÍCIO: 
		Ø SELECT TABELA_DE_PRODUTOS.NOME_DO_PRODUTO, ITENS_NOTAS_FISCAIS.CODIGO_DO_PRODUTO, 
			SUM(ITENS_NOTAS_FISCAIS.QUANTIDADE) AS QUANTIDADE
			FROM TABELA_DE_PRODUTOS
			INNER JOIN ITENS_NOTAS_FISCAIS 
			ON TABELA_DE_PRODUTOS.CODIGO_DO_PRODUTO = ITENS_NOTAS_FISCAIS.CODIGO_DO_PRODUTO
			GROUP BY TABELA_DE_PRODUTOS.NOME_DO_PRODUTO, ITENS_NOTAS_FISCAIS.CODIGO_DO_PRODUTO
			HAVING SUM(ITENS_NOTAS_FISCAIS.QUANTIDADE) > 394000
			ORDER BY SUM(ITENS_NOTAS_FISCAIS.QUANTIDADE) DESC;
	
	- LEFT JOIN --> consulta do banco de dados
		Ø SELECT DISTINCT 
			TC.NOME AS NOME_DO_CLIENTE
			, TV.BAIRRO AS BAIRRO_DO_VENDEDOR
			, TC.BAIRRO AS BAIRRO_DO_CLEINTE
			, TV.NOME AS NOME_DO_VENDEDOR
			FROM TABELA_DE_CLIENTES TC
			INNER JOIN
			TABELA_DE_VENDEDORES TV
			ON TC.BAIRRO = TV.BAIRRO

			--16 CLIENTES TOTAIS --> MAS, SOMENTE 7 POSSUEM RESIDÊNCIA EM BAIRROS DE VENDEDORES
			--4 VENDEDORES --> MAS, SOMENTE, 3 POSSUEM EMPRESAS PRÓXIMAS A CLIENTES
		
		--PARA DESCOBRIR OS QUE FALTAM --> RIGHT JOIN

		Ø SELECT DISTINCT 
			TC.NOME AS NOME_DO_CLIENTE
			, TV.BAIRRO AS BAIRRO_DO_VENDEDOR
			, TC.BAIRRO AS BAIRRO_DO_CLEINTE
			, TV.NOME AS NOME_DO_VENDEDOR
			FROM TABELA_DE_CLIENTES TC
			RIGHT JOIN -- todos os vendedores e nome do cliente nulo.
			TABELA_DE_VENDEDORES TV
			ON TC.BAIRRO = TV.BAIRRO
